const completionSpec: Fig.Spec = {
  name: "crystal",
  description: "Compiled object-oriented programing language",
  options: [
    { name: ["--help", "-h"], description: "shows help text", isPersistent: true },
    { name: ["--version", "-v"], description: "show version" },
  ],
  subcommands: [
    {
      name: "init",
      description: "generate a new project",
      args: [
        {
          name: "TYPE",
          description: "Project type (app,lib)",
          isOptional: false,
          suggestions: [
            { name: "lib", description: "Creates a library skeleton" },
            { name: "app", description: "Creates an application skeleton" },
          ],
        },
        {
          name: "DIR",
          description: "directory where project will be generated",
          isOptional: false,
        },
        {
          name: "NAME",
          description: "name of project to be generated, default: basename of DIR",
          isOptional: true,
        },
      ],
      options: [
        { name: ["-force", "-f"], description: "force overwrite existing files" },
        { name: ["-skip-existing", "-s"], description: "skip existing files" },
      ],
    },
    {
      name: "build",
      description: "build an executable",
      options: [
        { name: "--cross-compile", description: "cross-compile" },
        { name: ["--debug", "-d"], description: "Add full symbolic debug info" },
        { name: "--no-debug", description: "Skip any symbolic debug info" },
        { name: ["--define", "-D"], description: "Define a compile-time flag" },
        {
          name: "--emit",
          description: "Comma separated list of types of output for the compiler to emit",
          suggestions: [
            { name: "asm", description: "assembly language" },
            { name: "obj", description: "object files" },
            { name: "llvm-bc", description: "byte code" },
            { name: "llvm-ir", description: "intermediate representation" },
          ],
        },
        {
          name: ["--format", "-f"],
          description: "Output format text (default) or json",
          suggestions: [
            { name: "text", description: "text formated" },
            { name: "json", description: "json formated" },
          ],
        },
        { name: "--error-trace", description: "Show full error trace" },
        { name: "--ll", description: "Dump ll to Crystal's cache directory" },
        { name: "--link-flags", description: "Additional flags to pass to the linker" },
        { name: "--mcpu", description: "Target specific cpu type" },
        { name: "--mattr", description: "Target specific features" },
        { name: "--mcmodel", description: "Target specific code model" },
        {
          name: "--warnings",
          description: "Which warnings to detect. (default: all)",
          suggestions: [
            { name: "all", description: "Displays all warnings" },
            { name: "none", description: "Silence all warnings" },
          ],

        },
        { name: "--error-on-warnings", description: "Treat warnings as errors." },
        { name: "--exclude-warnings", description: "Exclude warnings from path (default: lib)" },
        { name: "--no-color", description: "Disable colored output" },
        { name: "--no-codegen", description: "Don't do code generation" },
        { name: "-o", description: "Output filename" },
        { name: "--prelude", description: "Use given file as prelude" },
        { name: "--release", description: "Compile in release mode" },
        { name: ["--stats", "-s"], description: "Enable statistics output" },
        { name: ["--progress", "-p"], description: "Enable progress output" },
        { name: ["--time", "-t"], description: "Enable execution time output" },
        { name: "--single-module", description: "Generate a single LLVM module" },
        { name: "--threads", description: "Maximum number of threads to use" },
        { name: "--target", description: "Target triple" },
        { name: "--verbose", description: "Display executed commands" },
        { name: "--static", description: "Link statically" },
        { name: "--stdin-filename", description: "Source file name to be read from STDIN" },
      ]
    },
    {
      name: "clear_cache",
      description: "clear the compiler cache",
      options: [
        { name: ["--version", "-v"], description: "show version" },
      ],
    },
    {
      name: "docs",
      description: "generate documentation",
      options: [
        {
          name: "--project-name",
          description: "Set project name",
          requiresEquals: true,
        },
        {
          name: "--project-version",
          description: "Set project version",
          requiresEquals: true,
        },
        {
          name: "--source-refname",
          description: "Set source refname (e.g. git tag, commit hash)",
          requiresEquals: true,
        },
        {
          name: "--source-url-pattern",
          description: "Set URL pattern for source code links",
          requiresEquals: true,
        },
        // NOTE: unhanded reqiresEquals
        { name: ["--output", "-o"], description: "Set the output directory (default: ./docs)" },
        { name: ["--format", "-f"], description: "Set the output format [html, json] (default: html)" },
        {
          name: "--json-config-url",
          description: "Set the URL pointing to a config file (used for discovering versions)",
          requiresEquals: true,
        },
        {
          name: "--canonical-base-url",
          description: "Indicate the preferred URL with rel=\"canonical\" link element",
          requiresEquals: true,
        },
        { name: ["--sitemap-base-url=URL", "-b URL"], description: "Set the sitemap base URL and generates sitemap" },
        {
          name: "--sitemap-priority",
          description: "Set the sitemap priority (default: 1.0)",
          requiresEquals: true,
        },
        {
          name: "--sitemap-changefreq",
          description: "Set the sitemap changefreq (default: never)",
          requiresEquals: true,
        },
        { name: ["--define", "-D"], description: "Define a compile-time flag" },
        { name: "--error-trace", description: "Show full error trace" },
        { name: "--no-color", description: "Disable colored output" },
        { name: "--prelude", description: "Use given file as prelude" },
        { name: ["--stats", "-s"], description: "Enable statistics output" },
        { name: ["--progress", "-p"], description: "Enable progress output" },
        { name: ["--time", "-t"], description: "Enable execution time output" },
        {
          name: "--warnings",
          description: "Which warnings to detect. (default: all)",
          suggestions: [
            { name: "all", description: "Displays all warnings" },
            { name: "none", description: "Silence all warnings" },
          ],
        },
        { name: "--error-on-warnings", description: "Treat warnings as errors." },
        { name: "--exclude-warnings", description: "Exclude warnings from path (default: lib)" },
      ]
    },
    {
      name: "env",
      description: "print Crystal environment information",
      options: [
      ],
    },
    {
      name: "eval",
      description: "eval code from args or standard input",
      options: [
        { name: ["--debug", "-d"], description: "Add full symbolic debug info" },
        { name: "--no-debug", description: "Skip any symbolic debug info" },
        { name: ["--define", "-D"], description: "Define a compile-time flag" },
        { name: "--error-trace", description: "Show full error trace" },
        { name: "--release", description: "Compile in release mode" },
        { name: ["--stats", "-s"], description: "Enable statistics output" },
        { name: ["--progress", "-p"], description: "Enable progress output" },
        { name: ["--time", "-t"], description: "Enable execution time output" },
        { name: "--no-color", description: "Disable colored output" },
        { name: "--mcpu", description: "Target specific cpu type" },
        { name: "--mattr", description: "Target specific features" },
        { name: "--mcmodel", description: "Target specific code model" },
        {
          name: "--warnings",
          description: "Which warnings to detect. (default: all)",
          suggestions: [
            { name: "all", description: "Displays all warnings" },
            { name: "none", description: "Silence all warnings" },
          ],
        },
        { name: "--error-on-warnings", description: "Treat warnings as errors." },
        { name: "--exclude-warnings", description: "Exclude warnings from path (default: lib)" },
      ],
    },
    {
      name: ["interactive", "i"],
      description: "starts interactive Crystal",
      options: [
        { name: ["--define", "-D"], description: "Define a compile-time flag" },
        { name: "--error-trace", description: "Show full error trace" },
        { name: "--no-color", description: "Disable colored output" },
        { name: "--prelude", description: "Use given file as prelude" },
      ],
    },
    {
      name: "play",
      description: "starts Crystal playground server",
      options: [
        { name: ["--port", "-p"], description: "Runs the playground on the specified port" },
        { name: ["--binding", "-b"], description: "Binds the playground to the specified IP" },
        { name: ["--verbose", "-v"], description: "Display detailed information of executed code" },
      ],
    },
    {
      name: "run",
      description: "build and run program",
      options: [
        { name: ["--debug", "-d"], description: "Add full symbolic debug info" },
        { name: "--no-debug", description: "Skip any symbolic debug info" },
        { name: ["--define", "-D"], description: "Define a compile-time flag" },
        {
          name: "--emit",
          description: "Comma separated list of types of output for the compiler to emit",
          suggestions: [
            { name: "asm", description: "assembly language" },
            { name: "obj", description: "object files" },
            { name: "llvm-bc", description: "byte code" },
            { name: "llvm-ir", description: "intermediate representation" },
          ],
        },
        {
          name: ["--format", "-f"],
          description: "Output format text (default) or json",
          suggestions: [
            { name: "text", description: "text formated" },
            { name: "json", description: "json formated" },
          ],
        },
        { name: "--error-trace", description: "Show full error trace" },
        { name: "--ll", description: "Dump ll to Crystal's cache directory" },
        { name: "--link-flags", description: "Additional flags to pass to the linker" },
        { name: "--mcpu", description: "Target specific cpu type" },
        { name: "--mattr", description: "Target specific features" },
        { name: "--mcmodel", description: "Target specific code model" },
        {
          name: "--warnings",
          description: "Which warnings to detect. (default: all)",
          suggestions: [
            { name: "all", description: "Displays all warnings" },
            { name: "none", description: "Silence all warnings" },
          ],
        },
        { name: "--error-on-warnings", description: "Treat warnings as errors." },
        { name: "--exclude-warnings", description: "Exclude warnings from path (default: lib)" },
        { name: "--no-color", description: "Disable colored output" },
        { name: "--no-codegen", description: "Don't do code generation" },
        { name: "-o", description: "Output filename" },
        { name: "--prelude", description: "Use given file as prelude" },
        { name: "--release", description: "Compile in release mode" },
        { name: ["--stats", "-s"], description: "Enable statistics output" },
        { name: ["--progress", "-p"], description: "Enable progress output" },
        { name: ["--time", "-t"], description: "Enable execution time output" },
        { name: "--single-module", description: "Generate a single LLVM module" },
        { name: "--threads", description: "Maximum number of threads to use" },
        { name: "--verbose", description: "Display executed commands" },
        { name: "--static", description: "Link statically" },
        { name: "--stdin-filename", description: "Source file name to be read from STDIN" },
      ],
    },
    {
      name: "spec",
      description: "build and run specs (in spec directory)",
      options: [
        { name: ["--debug", "-d"], description: "Add full symbolic debug info" },
        { name: "--no-debug", description: "Skip any symbolic debug info" },
        { name: ["--define", "-D"], description: "Define a compile-time flag" },
        { name: "--error-trace", description: "Show full error trace" },
        { name: "--release", description: "Compile in release mode" },
        { name: ["--stats", "-s"], description: "Enable statistics output" },
        { name: ["--progress", "-p"], description: "Enable progress output" },
        { name: ["--time", "-t"], description: "Enable execution time output" },
        { name: "--no-color", description: "Disable colored output" },
        { name: "--mcpu", description: "Target specific cpu type" },
        { name: "--mattr", description: "Target specific features" },
        { name: "--mcmodel", description: "Target specific code model" },
        {
          name: ["--warnings all|none"],
          description: "Which warnings to detect. (default: all)",
          suggestions: [
            { name: "all", description: "Displays all warnings" },
            { name: "none", description: "Silence all warnings" },
          ],
        },
        { name: "--error-on-warnings", description: "Treat warnings as errors." },
        { name: "--exclude-warnings", description: "Exclude warnings from path (default: lib)" },
        { name: "--link-flags", description: "Additional flags to pass to the linker" },
        // NOTE: runtime options
        { name: ["--example STRING", "-e"], description: "run examples whose full nested names include STRING" },
        { name: ["--line LINE", "-l"], description: "run examples whose line matches LINE" },
        { name: ["--profile", "-p"], description: "Print the 10 slowest specs" },
        { name: "--fail-fast", description: "abort the run on first failure" },
        { name: "--location", description: "run example at line 'line' in file 'file', multiple allowed" },
        { name: "--tag", description: "run examples with the specified TAG, or exclude examples by adding ~ before the TAG." },
        { name: "--order", description: "run examples in random order by passing MODE as 'random' or to a specific seed by passing MODE as the seed value" },
        { name: "--junit_output", description: "generate JUnit XML output within the given OUTPUT_PATH" },
        { name: ["--verbose", "-v"], description: "verbose output" },
        { name: "--tap", description: "Generate TAP output (Test Anything Protocol)" },
        { name: "--color", description: "Enabled ANSI colored output" },
        { name: "--no-color", description: "Disable ANSI colored output" },
      ],
    },
    // TODO: add the subcommands
    {
      name: "tool",
      description: "run a tool",
      options: [
      ],
      subcommands: [
        {
          name: "context",
          description: "show context for given location",
          options: [
            { name: ["-D FLAG", "--define FLAG"], description: "Define a compile-time flag" },
            { name: ["-c LOC", "--cursor LOC"], description: "Cursor location with LOC as path/to/file.cr:line:column" },
            {
              name: ["-f", "--format"],
              description: "Output format text (default) or json",
              suggestions: [
                { name: "text", description: "text formated" },
                { name: "json", description: "json formated" },
              ],
            },
            { name: "--error-trace", description: "Show full error trace" },
            { name: "--no-color", description: "Disable colored output" },
            { name: "--prelude", description: "Use given file as prelude" },
            { name: ["--stats", "-s"], description: "Enable statistics output" },
            { name: ["--progress", "-p"], description: "Enable progress output" },
            { name: ["--time", "-t"], description: "Enable execution time output" },
            { name: "--stdin-filename", description: "Source file name to be read from STDIN" },
          ],
        },
        {
          name: "expand",
          description: "show macro expansion for given location",
          options: [
            { name: ["--define", "-D"], description: "Define a compile-time flag" },
            { name: ["--cursor", "-c"], description: "Cursor location with LOC as path/to/file.cr:line:column" },
            {
              name: ["--format", "-f"],
              description: "Output format text (default) or json",
              suggestions: [
                { name: "text", description: "text formated" },
                { name: "json", description: "json formated" },
              ],
            },
            { name: "--error-trace", description: "Show full error trace" },
            { name: "--no-color", description: "Disable colored output" },
            { name: "--prelude", description: "Use given file as prelude" },
            { name: ["--stats", "-s"], description: "Enable statistics output" },
            { name: ["--progress", "-p"], description: "Enable progress output" },
            { name: ["--time", "-t"], description: "Enable execution time output" },
            { name: "--stdin-filename", description: "Source file name to be read from STDIN" },
          ],
        },
        {
          name: "format",
          description: "format project, directories and/or files",
          options: [
            { name: "--check", description: "Checks that formatting code produces no changes" },
            { name: ["--include", "-i"], description: "Include path" },
            { name: ["--exclude", "-e"], description: "Exclude path (default: lib)" },
            { name: "--no-color", description: "Disable colored output" },
            { name: "--show-backtrace", description: "Show backtrace on a bug (used only for debugging)" },
          ],
        },
        {
          name: "hierarchy",
          description: "show type hierarchy",
          options: [
            { name: ["--define", "-D"], description: "Define a compile-time flag" },
            { name: "-e", description: "Filter types by NAME regex" },
            {
              name: ["--format", "-f"],
              description: "Output format text (default) or json",
              suggestions: [
                { name: "text", description: "text formated" },
                { name: "json", description: "json formated" },
              ],
            },
            { name: "--error-trace", description: "Show full error trace" },
            { name: "--no-color", description: "Disable colored output" },
            { name: "--prelude", description: "Use given file as prelude" },
            { name: ["--stats", "-s"], description: "Enable statistics output" },
            { name: ["--progress", "-p"], description: "Enable progress output" },
            { name: ["--time", "-t"], description: "Enable execution time output" },
            { name: "--stdin-filename", description: "Source file name to be read from STDIN" },
          ],
        },
        {
          name: "implementations",
          description: "show implementations for given call in location",
          options: [
            { name: ["--define", "-D"], description: "Define a compile-time flag" },
            { name: ["--cursor", "-c"], description: "Cursor location with LOC as path/to/file.cr:line:column" },
            {
              name: ["--format", "-f"],
              description: "Output format text (default) or json",
              suggestions: [
                { name: "text", description: "text formated" },
                { name: "json", description: "json formated" },
              ],
            },
            { name: "--error-trace", description: "Show full error trace" },
            { name: "--no-color", description: "Disable colored output" },
            { name: "--prelude", description: "Use given file as prelude" },
            { name: ["--stats", "-s"], description: "Enable statistics output" },
            { name: ["--progress", "-p"], description: "Enable progress output" },
            { name: ["--time", "-t"], description: "Enable execution time output" },
            { name: "--stdin-filename", description: "Source file name to be read from STDIN" },
          ],
        },
        {
          name: "types",
          description: "show type of main variables",
          options: [
            { name: ["--define", "-D"], description: "Define a compile-time flag" },
            {
              name: ["--format", "-f"],
              description: "Output format text (default) or json",
              suggestions: [
                { name: "text", description: "text formated" },
                { name: "json", description: "json formated" },
              ],
            },
            { name: "--error-trace", description: "Show full error trace" },
            { name: "--no-color", description: "Disable colored output" },
            { name: "--prelude", description: "Use given file as prelude" },
            { name: ["--stats", "-s"], description: "Enable statistics output" },
            { name: ["--progress", "-p"], description: "Enable progress output" },
            { name: ["--time", "-t"], description: "Enable execution time output" },
            { name: "--stdin-filename", description: "Source file name to be read from STDIN" },
          ],
        },
      ],
    },
    {
      name: "help",
      description: "shows help text",
    },
    {
      name: "version",
      description: "show version",
    },
  ]
}

export default completionSpec;
